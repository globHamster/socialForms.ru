@model PagedList.IPagedList<SocialFORM.Models.Form.ResultModel>
@using PagedList.Mvc;
<style>
    .GEOButton {
        display: inline-flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 25px;
        height: 25px;
        background-color: #008dd2;
        padding: 5px;
        border-radius: 25px;
    }

    .AUDIOBattonPlau {
        display: inline-flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 25px;
        height: 25px;
        background-color: #008dd2;
        padding: 5px;
        border-radius: 25px;
    }

    .AUDIOBattonDown {
        display: inline-flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 25px;
        height: 25px;
        background-color: #008dd2;
        padding: 5px;
        border-radius: 25px;
    }

        .AUDIOBattonDown a {
            display: block; /* Ссылка как блочный элемент */
            text-align: center; /* Выравнивание по центру */
            height: 100%; /* Высота на весь слой */
            color: #666; /* Цвет ссылки */
        }

    .DeleteBlankButton {
        display: inline-flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 25px;
        height: 25px;
        background-color: #f44336;
        padding: 5px;
        border-radius: 25px;
    }

    .Scaled {
        transform: scale(1.1,1.1);
        box-shadow: 5px 5px black;
        transition: 0.1s linear;
    }

    .NotScaled {
        transform: scale(1,1);
        box-shadow: 0px 0px black;
        transition: 0.1s linear;
    }

    .ScaledAllText {
        transform: scale(1.2,1.2);
        transition: .5s linear;
    }

    div[name=PanelSettingResult] {
        width: 100%;
        height: 50px;
        background-color: #008dd2;
    }

    .ChangeColor {
        background-color: #bbbbbb;
    }

    input[name=CheckBox] + label {
        font: 18px bold;
        color: #444;
        cursor: pointer;
    }

    div[name=panel_setting_load] {
        width: 200px;
        height: auto;
        display: none;
        position: absolute;
        border: 1px solid #008dd2;
        z-index: 10;
        margin: 0px 3px;
        background: #fff;
        grid-template-columns: repeat(10, 1fr);
        padding: 5px;
    }

        div[name=panel_setting_load] input[type=checkbox] {
            display: none;
        }

        div[name=panel_setting_load] label:after {
            content: '';
            display: block;
            height: 14px;
            width: 14px;
            outline: 1px solid #939598;
        }

        div[name=panel_setting_load] label:hover {
            box-shadow: 0px 0px 3px 1px black;
        }

        div[name=panel_setting_load] input[type=checkbox]:checked + label:after {
            outline: 1px solid #939598;
            border: 2px solid #fff;
            width: 14px;
            height: 14px;
            background-color: #008dd2;
        }

    .ShowPanelDate {
        display: grid !important;
    }

    div[name=btn_date_blank]:hover {
        transform: scale(1.1,1.1);
        box-shadow: 5px 5px black;
        transition: 0.1s linear;
    }

    div[name=btn_filter_blank]:hover {
        transform: scale(1.1,1.1);
        box-shadow: 5px 5px black;
        transition: 0.1s linear;
    }
</style>
<div name="PanelSettingResult" style="display: -webkit-inline-box;">
    <div style="display: flex; justify-content: center; align-items: center; flex-direction: column; margin-left: 15px; ">
        <div>
            <select name="ListUserId">
                <option value="0">Все</option>
            </select>
        </div>
    </div>
    <div style="padding-top: 10px; padding-left: 10px;">
        <div name="btn_date_blank" style="display:flex;padding:5px 15px;border-radius:15px;background-color:#008dd2;border: 2px solid white;color:white;font-weight:600;"
             onclick="
    if ($('div[name=panel_setting_load]').hasClass('ShowPanelDate')) { $('div[name=panel_setting_load]').removeClass('ShowPanelDate') } else { $('div[name=panel_setting_load]').addClass('ShowPanelDate') }">
            <div>Даты</div>
        </div>
        <div>
            <div name="panel_setting_load">
            </div>
        </div>
    </div>
    <div style="padding-top: 10px; padding-left: 10px;">
        <div name="btn_filter_blank" style="display:flex; padding: 5px 15px; background-color: #008dd2; border: 2px solid white; color: #fff; border-radius:15px; font-weight:600;" onclick="ClickFunctionTest()">
            <div>Фильтр</div>
        </div>
    </div>

    <div style="padding-top: 10px; padding-left: 10px;">
        <div name="btn_date_blank" style="display:flex;padding:5px 15px;border-radius:15px;background-color:#008dd2;border: 2px solid white;color:white;font-weight:600;">
            <div class="AudioName"></div>
        </div>
    </div>

    <div style="padding:3px;margin:5px 10px;border-radius:15px;background-color:#008dd2;border: 2px solid white;color:white;font-weight:600;">
        <audio class="AudioHtml" id="player2" controls preload="auto" style="height: 30px;"></audio>
    </div>
</div>
<div class="table_blanks" style="overflow:auto" id="@Model.First().ProjectID">
    <table class="export_table">
        <thead>
            <tr class="name_colum">
                <th>Audio</th>
                <th style="width: 50em;">GEO</th>
                <th>Номер бланка</th>
                <th style="white-space:nowrap">ФИО</th>
                <th style="white-space:nowrap;">Номер телефона</th>
                <th style="white-space:nowrap;">Начало Анкеты</th>
                <th style="white-space:nowrap;">Завершение Анкеты</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="@item.Id" name="@item.Id" class="answer_row" style="height: 20px;" onclick="ChangeColorTR($(this))">
                    <td style="border: 0px; align-self: center; width: 50em;">
                        <div style="width: 100%; display:inline-flex; flex-direction: row; justify-content:center; align-content: space-between; align-items: center;">
                            <div class="AUDIOBattonPlau">
                                <div style="display: none" name="AudioPlayID">@item.BlankID</div>
                                <img src="~/Content/play-i.png" width="10" height="10" />
                            </div>
                            <div class="AUDIOBattonDown">
                                <div style="display: none" name="AudioDownID">@item.BlankID</div>
                                <div class="AudioUrl" style="display:none"></div>
                                <img src="~/Content/downloads-i.png" width="20" height="20" />
                            </div>
                        </div>
                    </td>
                    <td style="border: 0px; align-self: center; width: 50em;">
                        <div style="width: 100%; display:inline-flex; flex-direction: row; justify-content:center; align-content: space-between; align-items: center;">
                            <div class="GEOButton">
                                <div style="display: none" name="CootdWidth">@item.CoordWidth</div>
                                <div style="display: none" name="CootdHeight">@item.CoordHeight</div>
                                <img src="~/Content/map-marker-icon.png" width="20" height="20" />
                            </div>
                            <div style="display: none" id="AudioDelID" name="AudioDelID">@item.BlankID</div>
                            <div class="DeleteBlankButton" id="@item.Id">
                                &#10006;
                            </div>
                        </div>
                    </td>
                    <td><input type="hidden" name="UserID" value="@item.UserID" /> @item.BlankID</td>
                    <td style="white-space:nowrap">@item.UserName</td>
                    <td style="white-space:nowrap">@item.PhoneNumber</td>
                    <td class="startDATE" style="white-space:nowrap">@item.Data</td>
                    <td style="white-space:nowrap">@item.Time</td>
                </tr>

            }
        </tbody>
    </table>
</div>
<div id="contentPager">
    @Html.PagedListPager(
                                                    Model,
                                                    page => Url.Action("_TableBlanks", "Home", new { id_project = ViewBag.Id_Project_Next, page = page }),
                                                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "table_blanks_new" })
                                                    )
</div>


<script src="https://api-maps.yandex.ru/2.1/?load=package.standard&lang=ru-RU" type="text/javascript"></script>
<script src="~/Scripts/FileSaver.js" type="text/javascript"></script>
<script src="~/Scripts/tableexport.js" type="text/javascript"></script>
<script type="text/javascript">

    function ClickFunctionTest() {
        const user_id = $('select[name=ListUserId]').find('option:selected').val();
        const id_p = Number($('div.table_blanks').attr('id'));
        let lst_date = "";
        $('div[name=panel_setting_load]').find('input[type=checkbox]:checked').each(function () {
            lst_date += $(this).attr('name') + "|";
        })
        $('.Tables').load('/Home/TableBlanksSetting?id_project=' + id_p + '&UserId=' + user_id + '&date=' + lst_date, function (responseText, textStatus, XHR) {
            if (XHR.status == 500) alert("По данным настройка список пуст!");
        });
    }

    function ChangeColorTR(el) {
        el.parent().find('.ChangeColor').removeClass('ChangeColor');
        el.addClass('ChangeColor');
    }

    var list_schoolDay = [];
    let awayting_status = 0;

    //Массивы для формирования таблицы результатов
    let tmp_lst_group_iter = {};
    let tmp_lst_group_item = {};
    let send_lst_q = [];
    let tmp_lst_answer_model = {};
    let tmp_lst_answer_all_model = {};
    let set_of_answer_to_q = {};
    let tmp_lst_row = {};
    let tmp_lst_question = {};
    let list_question = {};

    $(function () {
        Init();
    })

    function Init() {

        if ($('span.RoleID').attr('id') == 3) {
            $('table.export_table').find('.DeleteBlankButton').remove();
        }

        $.get("/Home/GetListOperatorInProject", { p_id: Number($('div.table_blanks').attr('id')) })
            .success(function (server_data) {
                var select_lst = $('select[name=ListUserId]');
                $.each(server_data, function (i, item) {
                    select_lst.append("<option value='" + item.UserId + "'>" + item.Family + " " + item.Name + "</option>");
                })
            })

        $.get("/Home/GetListDateInProject", { p_id: Number($('div.table_blanks').attr('id')) })
            .success(function (server_data) {
                var check_panel_date = $('div[name=panel_setting_load]');
                $.each(server_data, function (i, item) {
                    check_panel_date.append("<div style='grid-column: span 2;'><input type='checkbox' id='check" + item + "' name='" + item + "' onchange='ChangColorBTNDate()'/> <label for='check" + item + "'></label>" +
                        "</div><div style='grid-column: span 8;'>" + item + "</div>");
                });
            });

        $.get("/Question/getSchoolDay")
            .success(function (_server_data) {
                $.each(_server_data, function (i, item) {
                    list_schoolDay.push(item.split('#'));
                })
                awayting_status++;
            })

        $.get("/Question/getListQuestion", { id_p: Number($('div.table_blanks').attr('id')) })
            .success(function (server_data) {
                list_question = server_data;
                awayting_status++;
            })

        $.get("/Group/getGroup", { id_p: $('div.table_blanks').attr('id') })
            .success(function (server_data) {
                $.each(server_data, function (i, item_group) {
                    if (item_group.Group == null) {
                        tmp_lst_group_iter[item_group.IndexQuestion] = item_group;
                        tmp_lst_group_item[item_group.QuestionID] = item_group.GroupName;
                        send_lst_q.push(item_group.QuestionID);
                    }
                })

                awayting_status++;

                $.get("/Question/GetAnswerList", { id_lst_q: send_lst_q.join(',') })
                    .success(function (_server_data) {
                        $.each(_server_data, function (i, item) {
                            tmp_lst_answer_model[item.Id] = item;
                        })
                        awayting_status++;
                    })

                $.get("/Question/GetAnswerAllList", { id_lst_q: send_lst_q.join(',') })
                    .success(function (_server_data) {
                        $.each(_server_data, function (i, item) {
                            if (set_of_answer_to_q[item.QuestionID] == undefined || set_of_answer_to_q[item.QuestionID] == null) {
                                set_of_answer_to_q[item.QuestionID] = [item.AnswerKey];
                            } else {
                                set_of_answer_to_q[item.QuestionID].push(item.AnswerKey);
                            }
                            tmp_lst_answer_all_model[item.AnswerKey] = item;
                        })
                        awayting_status++;
                    })

                $.get("/Question/GetTableRowAll", { id_lst_q: send_lst_q.join(',') })
                    .success(function (_server_data) {
                        $.each(_server_data, function (i, item) {
                            if (tmp_lst_row[item.TableID] == undefined || tmp_lst_row[item.TableID] == null) {
                                tmp_lst_row[item.TableID] = [item];
                            } else {
                                tmp_lst_row[item.TableID].push(item);
                            }
                        })
                        awayting_status++;
                    })

            })
    }

    function ChangColorBTNDate() {
        if ($('div[name=panel_setting_load]').find('input:checked').length >= 1) {
            $('div[name=btn_date_blank]').css("background-color", "#81c784");
        } else {
            $('div[name=btn_date_blank]').css("background-color", "#008dd2");
        }
    }

    function WaitingLoad() {
        if (awayting_status >= 6) {
            CreateColumn();
            return;
        } else {
            setTimeout(WaitingLoad, 2000);
            return;
        }
    }

    setTimeout(function () {
        WaitingLoad();
    }, 2000)

    //Создание шапки таблицы результатов ответов
    function CreateColumn() {
        var code = '';
        $.each(list_question, function (i, item) {
            tmp_lst_question[item.Id] = item;
        })

        list_question = {};

        $.each(send_lst_q, function (i, item) {
            list_question[i] = tmp_lst_question[item];
            list_question[i].TextQuestion = tmp_lst_group_item[item];
        })



        $.each(list_question, function (i, item) {
            switch (item.TypeQuestion) {
                case 1: {
                    //Проверка на вхождение ответа с полем "Другое"
                    let has_area_other = false;
                    $.each(set_of_answer_to_q[item.Id], function (i, item) {
                        if (tmp_lst_answer_all_model[item].AnswerType == 1 && tmp_lst_answer_model[item].isFreeArea == true) has_area_other = true;
                    })
                    code += '<th class="question_colum" id="' + item.Id + '" name="single">' + item.TextQuestion + '</th>';
                    if (has_area_other) code += '<th class="question_colum other" id="' + item.Id + '" name="single">' + item.TextQuestion + '_др</th>';
                    $('tr.name_colum').append(code);
                    code = '';
                }
                    break;
                case 2: {
                    let count_answer = 0;
                    if (item.LimitCount == 0 || item.LimitCount == null) {
                        count_answer = set_of_answer_to_q[item.Id].length;
                        $.each(set_of_answer_to_q[item.Id], function (i, _item) {
                            if (tmp_lst_answer_all_model[_item].AnswerType == 2) { count_answer--; }
                        })
                    } else {
                        count_answer = Number(item.LimitCount);
                    }



                    for (var i = 1; i <= count_answer; i++) {
                        code += '<th class="question_colum" id="' + item.Id + '" name="multiple">' + item.TextQuestion + '_' + i + '</th>';
                    }
                    //Проверка на вхождение ответа с полем "Другое"
                    let change_count = 1;
                    let id_question_column = item.Id;
                    let text_question = item.TextQuestion;
                    $.each(set_of_answer_to_q[item.Id], function (i, item) {
                        if (Number(tmp_lst_answer_all_model[item].AnswerType) == 1 && tmp_lst_answer_model[item].isFreeArea == true) {
                            code += '<th class="question_colum other" id="' + id_question_column + '" name="multiple">' + text_question + '_' + change_count + '_др</th>';
                            change_count++;
                        }

                    })
                    $('tr.name_colum').append(code);
                    code = '';
                }
                    break;
                case 3: {

                    let count_answer = set_of_answer_to_q[item.Id];
                    let id_question_column = item.Id;
                    console.log("Count free answer >>> ", count_answer);

                    if (set_of_answer_to_q[item.Id].length > 1) {
                        for (let i = 1; i <= set_of_answer_to_q[item.Id].length; i++) {
                            code += '<th class="question_colum" id="' + id_question_column + '" name="free">' + item.TextQuestion + '_' + i + '</th>';
                        }
                        $('tr.name_colum').append(code);
                        code = '';
                    } else {
                        code += '<th class="question_colum" id="' + id_question_column + '" name="free">' + item.TextQuestion + '</th>';
                        $('tr.name_colum').append(code);
                        code = '';
                    }
                }
                    break;
                case 4: {

                    let tmp_lst_set_row = {};
                    let id_question_column = item.Id;
                    let count_row = 0;
                    let zero_index_count = 0;
                    let is_have_own_index = item.Bind == null ? false : true;

                    $.each(tmp_lst_row[item.Id], function (i, item) {
                        if (tmp_lst_set_row[item.IndexRow] == undefined || tmp_lst_set_row[item.IndexRow] == null) {
                            tmp_lst_set_row[item.IndexRow] = [item];
                        } else {
                            tmp_lst_set_row[item.IndexRow].push(item);
                        }
                    })

                    if (is_have_own_index == true) {
                        $.each(tmp_lst_set_row, function (i, item) {
                            if (i == 0) {
                                zero_index_count = item.length;
                            } else {
                                if (count_row < item.length) count_row = item.length;
                            }
                        })
                    } else {
                        $.each(tmp_lst_set_row, function (i, _data) {
                            count_row++;
                        });
                    }
                    console.log("Own index >> ", count_row);
                    for (var i = 1; i <= (count_row + zero_index_count); i++) {
                        code += '<th class="question_colum" id="' + id_question_column + '" name="table">' + item.TextQuestion + '_' + i + '</th>';
                    }
                    $('tr.name_colum').append(code);
                    code = '';
                }
                    break;
                case 5:
                    break;
                case 6:
                    var has_area_other = false;
                    //
                    code += '<th class="question_colum" id="' + item.Id + '" name="filter">' + item.TextQuestion + '</th>';
                    code += '<th class="question_colum other" id="' + item.Id + '" name="filter">' + item.TypeQuestion + '_др</th>';
                    $('tr.name_colum').append(code);
                    code = '';
                default:
                    break;
            }

        })
        ShowResultTable();
        $('.PreLoader').hide();
    }
    //})

    //Формировка таблицы с результатами ответов
    function ShowResultTable() {
        $('tr.answer_row').each(function () {
            var UserID = $(this).find('input[name=UserID]').val();
            var startDATE = $(this).find('.startDATE').text().split(' ');
            var tmp_this = $(this);
            $.each(list_schoolDay, function (i, item) {
                //  var tmp = item.Date.toString();
                // var string = tmp.split(' ');

                if (item[0] == UserID && item[1] == startDATE[0]) {
                    tmp_this.css("background-color", "grey");
                }
            })
            //var result_list = [];
            //var id_result_list = [];
            let tr_element = $(this);
            $.get("/Home/TableResultBlank", { id_blank: $(this).attr('id') })
                .success(function (_server_data) {
                    let result_list = [];
                    let id_result_list = [];
                    $.each(_server_data, function (i, item) {
                        result_list.push(item);
                        id_result_list.push(item.QuestionID);
                    });

                    let code = '';
                    let element_answer = tr_element;
                    $('th.question_colum').each(function () {
                        let index = id_result_list.indexOf(Number($(this).attr('id')));
                        let is_other = $(this).hasClass('other');
                        if ($(this).hasClass('other'))
                            element_answer.append('<td class="other" id="' + $(this).attr('id') + '"></td>');
                        else
                            element_answer.append('<td class="normal" id="' + $(this).attr('id') + '" name="' + $(this).attr('name') + '"></td>');
                    });
                    let index_td = 0;
                    let last_multi_question;
                    $.each(result_list, function (i, item) {
                        let type_q = element_answer.find('td.normal[id=' + item.QuestionID + ']').attr('name');
                        switch (type_q) {
                            case 'single': {
                                if (item.AnswerID == 404) break;
                                element_answer.find('td.normal[id=' + item.QuestionID + ']').text(item.AnswerIndex);
                                if (item.Text != null) element_answer.find('td.other[id=' + item.QuestionID + ']').html("<p class='text_td' onclick='ShowAllText($(this))'>" + item.Text + "</p>");
                                // if (item.Text != null) element_answer.find('td.other[id=' + item.QuestionID + ']').text(item.Text);
                            }
                                break;
                            case 'multiple': {
                                if (item.AnswerID == 404) break;
                                let elem = element_answer.find('td.normal[id=' + item.QuestionID + ']');
                                let is_find = true;
                                if (last_multi_question != item.QuestionID) index_td = 0;
                                last_multi_question = item.QuestionID;
                                elem[index_td].append(item.AnswerIndex);

                                if (item.Text != null) {
                                    element_answer.find('td.other[id=' + item.QuestionID + ']').each(function () {
                                        if ($(this).text() == '' && is_find) { $(this).html("<p class='text_td' onclick='ShowAllText($(this))'>" + item.Text + "</p>"); is_find = false; }
                                        //if ($(this).text() == '' && is_find) { $(this).text(item.Text); is_find = false; }
                                    });
                                }
                                is_find = true;
                                index_td++;
                            }
                                break;
                            case 'free': {
                                if (item.AnswerID == 404) break;
                                let is_find = true;
                                element_answer.find('td.normal[id=' + item.QuestionID + ']').each(function () {
                                    if ($(this).text() == '' && is_find) { $(this).html("<p class='text_td' onclick='ShowAllText($(this))'>" + item.Text + "</p>"); is_find = false; }
                                });
                            }
                                break;
                            case 'table': {
                                if (item.AnswerID == 404) break;

                                let is_find = true;
                                element_answer.find('td.normal[id=' + item.QuestionID + ']').each(function () {
                                    if ($(this).text() == '' && is_find) { $(this).text(item.AnswerIndex); is_find = false; }
                                })
                                is_find = true;
                            }
                                break;
                            case 'filter': {
                                if (item.AnswerID == 404) break;

                                element_answer.find('td.normal[id=' + item.QuestionID + ']').text(item.AnswerIndex);
                                if (item.Text != null) element_answer.find('td.other[id=' + item.QuestionID + ']').html("<p class='text_td' onclick='ShowAllText($(this))'>" + item.Text + "</p>");
                            }
                                break;
                            default:
                                break;
                        }
                    })
                    $('td[name=free]').css('color', 'red');
                    $('td.other').css('color', 'blue');
                })
        });

    }

    function remove(arr, indexes) {
        var arrayOfIndexes = [].slice.call(arguments, 1);
        return arr.filter(function (item, index) {
            return arrayOfIndexes.indexOf(index) == -1;
        });
    }

    $('button.clear_blanks').click(function () {
        $.post("/Home/deleteResults", { id: $('div.table_blanks').attr('id') });
        alert("База очищена");
        $("#Tables").load("/Home/Project");
    });

    $('div.table_blanks').on("mouseenter", ".DeleteBlankButton", function () {
        $(this).addClass("Scaled");
    })

    $('div.table_blanks').on("mouseleave", ".DeleteBlankButton", function () {
        $(this).removeClass("Scaled");
    })

    $('div.table_blanks').on("mouseenter", ".AUDIOBattonPlau", function () {
        $(this).addClass("Scaled");
    })

    $('div.table_blanks').on("mouseleave", ".AUDIOBattonPlau", function () {
        $(this).removeClass("Scaled");
    })
    $('div.table_blanks').on("click", ".DeleteBlankButton", function () {
        let isDelete = confirm("Вы действительно хотите удалить анкету?");
        if (isDelete == true) {
            $(this).removeClass("Scaled").addClass('NotScaled');
            var elem = $(this);
            var id_result = $(this).attr('id');
            var AudioID = $(this).find("div[name=AudioDelID]").text();
            var AudioName = $("div.title").text();
            var name = AudioID + '_' + AudioName;
            $.post("/Form/DeleteBlankResult", { id_res: id_result })
                .success(function () {
                    elem.parents('.answer_row').remove();
                });
        }
    })

    $('div.table_blanks').on("mouseenter", ".GEOButton", function () {
        $(this).addClass("Scaled");
    })

    $('div.table_blanks').on("mouseleave", ".GEOButton", function () {
        $(this).removeClass("Scaled");
    })

    $('div.table_blanks').on("mouseenter", ".AUDIOBattonDown", function () {
        $(this).addClass("Scaled");
    })

    $('div.table_blanks').on("mouseleave", ".AUDIOBattonDown", function () {
        $(this).removeClass("Scaled");
    })

    $('div.table_blanks').on("click", ".AUDIOBattonDown", function () {
        var AudioID = $(this).find("div[name=AudioDownID]").text();
        var AudioName = $("div.title").text();
        var name = AudioID + '_' + AudioName;
        $.ajax({
            url: '/Audio/AudioFind',
            type: 'GET',
            data: { audio_name: name },
            success: function (res) {
                if (res == 200) {
                    window.location.href = '/Audio/AudioDownloads?audio_name=' + name
                } else {
                    alert('Файл не найден!');
                }
            },
            error: function () {
                alert('Ошибка запроса файла!');
            }
        });
    })
    let audio;
    $('div.table_blanks').on("click", ".AUDIOBattonPlau", function () {
        console.log("Play");
        var AudioID = $(this).find("div[name=AudioPlayID]").text();
        var AudioName = $("div.title").text();
        var name = AudioID + '_' + AudioName;
        $.ajax({
            url: '/Audio/AudioFind',
            type: 'GET',
            data: { audio_name: name },
            success: function (res) {
                if (res == 200) {
                    var audio = document.getElementById('player2');
                    var codeName = AudioID;
                    var codeSRC = '<source src="/Audio/AudioDownloads?audio_name=' + name + '"  type="audio/mpeg">';
                    $(".AudioName").empty();
                    $(".AudioHtml").empty();
                    $(".AudioName").append(codeName);
                    $(".AudioHtml").append(codeSRC);
                    audio.load();

                    audio.play();
                } else {
                    alert('Файл не найден!');
                }
            },
            error: function () {
                alert('Ошибка запроса файла!');
            }
        });
    })

    $('div.table_blanks').on("click", ".GEOButton", function () {
        var CoordWidth = $(this).find("div[name=CootdWidth]").text();
        var CoordHeight = $(this).find("div[name=CootdHeight]").text()
        $('body div.body-content').append('<div class="back_end"><div class="map_yandex" id="map"></div></div>');
        $('div.map_yandex').css({
            'position': 'fixed',
            'width': '60%',
            'height': '60%',
            'left': '20%',
            'top': '20%',
            'background-color': 'rgba(200, 200, 200, 0.7)',
            'display': 'block'
        });
        $('div.back_end').css({
            'position': 'fixed',
            'width': '100%',
            'height': '100%',
            'left': '0',
            'top': '0',
            'background-color': 'rgba(200, 200, 200, 0.7)',
            'display': 'block'
        });
        $('div.map_yandex').mouseenter(function () {
            $('div.body-content').off('click', 'div.back_end');
        });
        $('div.map_yandex').mouseleave(function () {
            $('div.body-content').on('click', 'div.back_end', function () {
                $('div.body-content').off('click', 'div.back_end');
                $(this).remove();
            });
        });

        var coordX = Number(CoordWidth), coordY = Number(CoordHeight);

        var myMap = new ymaps.Map('map', {
            center: [coordX, coordY],
            zoom: 15
        }, {
                searchControlProvider: 'yandex#search'
            });

        myMap.geoObjects.add(new ymaps.Placemark([coordX, coordY], {

            hintContent: 'Метка'
        },
            {
                preset: 'islands#blueCircleDotIcon'
            }));
    })

    function ShowAllText(elemnt) {
        if ($('div[name=DivBlockFull]').length > 0) {
            $('div[name=DivBlockFull]').parent().find('p').show();
            $('div[name=DivBlockFull]').remove();
        }
        elemnt.parent().css("padding", "0px");
        elemnt.after("<div onclick='DeleteDivBlock($(this))' name='DivBlockFull' style='width: 100%; height: 100%;position:relative;display:flex;justify-content:center;align-items:center;'>" +
            "<div class='ShowAllText' style='width:auto;height:auto;border:1px solid black;position: absolute;background:#008dd2; color:#fff;display:flex;justify-content:center;align-items:center;'><div>"
            + elemnt.text() + "</div></div></div > ");
        elemnt.hide();
        $('div.ShowAllText').animate({ width: "250px", height: "75px" }, 100, function () { });
    }

    function DeleteDivBlock(elemnt) {
        elemnt.parent().find('p').show();
        elemnt.remove();
    }
</script>
