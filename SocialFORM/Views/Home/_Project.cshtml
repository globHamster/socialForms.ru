@model PagedList.IPagedList<SocialFORM.Models.Project.ProjectModel>
@using PagedList.Mvc;
<style>
    .Button{
        width: 150px;
        height: 30px;
        background-color: #72afff;
        font-family: 'Century Gothic';
        align-items: center;
        display: inline-flex;
        position:relative;
        top: -1px;
    }
    .Text{
        width: 100%;
        text-align: center;
    }
    .ProjectName {
        width: 350px;
        font-family: 'Century Gothic';
        padding: 5px;
        display: inline-flex;
    }
    .PanelOfProject{
        width: 100%;
        padding: 10px;
        box-shadow: 0 0 5px 1px black;
    }
    .ProjectLayer{
        display: flex;
        height: 30px;
        border: 1px solid black;
        border-left: 15px solid black;
        border-bottom-left-radius: 15px;
        border-top-left-radius: 15px;
        margin-bottom: 5px;
    }
    .ExportButton {
        display: flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 100px;
        height: 30px;
        background-color: #008dd2;
        cursor: default;
        color: #fff;
    }
    .ShowDB {
        display: flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 100px;
        height: 30px;
        background-color: #008dd2;
        cursor: default;
        color: #fff;
    }
    .CheckEncode {
        display: flex;
        justify-content: center;
        align-content: space-between;
        align-items: center;
        flex-direction: column;
        width: 30px;
        height: 30px;
        background-color: #008dd2;
        border-left: 2px solid #b0bec5;
        cursor: pointer;
        color: #fff;
    }
    .SettingExport{
        display:inline-flex;
    }
    .Scaled {
        transform: scale(1.1,1.1);
        box-shadow: 5px 5px black;
        transition: 0.1s linear;
    }

    .NotScaled {
        transform: scale(1,1);
        box-shadow: 0px 0px black;
        transition: 0.1s linear;
    }
    .EncodingString{
        display: none;
        position: fixed;
        border: 5px inset #008dd2;
        z-index: 999;
        background: #fff;
        padding: 5px;
        font-family: 'Century Gothic';
    }
    .EncodingString > div {
        background-color: #fff;
        margin: 5px;
    }
    .EncodingString > div > input{
        margin-right: 5px;
    }
</style>


<h2>Список проектов</h2>

<p>
</p>
<table class="table">
    <tr>
        <th>

            <span class="create_project" style="cursor: pointer;">Имя проекта </span><button class="create_project_button">Создать проект</button>
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr class="project_layer">
            <td id="@item.Id">
                @Html.DisplayFor(modelItem => item.NameProject)
            </td>
            <td style="display: inline-flex;">
                <button class="infoP" id="@item.Id">?</button>
                <div class="ShowDB" id="@item.Id">База данных</div>
                <div style="width:2px;"/>
                <div class="SettingExport">
                    <input type="hidden" name="SettingEncodeProject" value="@item.SettingEncode" />
                    <div class="ExportButton" id="@item.Id">&#11015; Экспорт</div>
                    <div class="CheckEncode">&#9776;</div>
                </div>
                @Html.ActionLink("Копировать", "Copi", new { id = item.Id }) |
                @Html.ActionLink("Удалить", "Delete", new { id = item.Id }) |
                @if (item.ActionProject == true)
                {<button class="actionProject" id="@item.Id">В работе</button>}
                else
                {<button class="actionProject" id="@item.Id">Заблокирован</button>}
            </td>
        </tr>
        <tr class="info_project" id="@item.Id" style="display:none">
            <td><button class="infoP_close" id="@item.Id">X</button></td>
            <td class="str_infoP" id="@item.Id"></td>
        </tr>
    }

</table>

<div id="contentPager">
    @Html.PagedListPager(
                Model,
                page => Url.Action("_Project", "Home", new { page = page }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "Tables" })
                             )
</div>

<div class="EncodingString" id="EncodingString">
    <div name="UTF-8"><input type="radio" name="setting"/>UTF-8</div>
    <div name="Windows-1251"><input type="radio" name="setting">Windows-1251</div>
</div>
@Scripts.Render("~/Scripts/jquery-1.10.2.js")
<script type="text/javascript">

    $('button.infoP_close').click(function () {
        var id_project = $(this).attr('id');
        $('tr.info_project[id =' + id_project + ']').attr('style', 'display:none');
    });

    $('button.infoP').click(function () {
        var id_project = $(this).attr('id');
        $('tr.info_project[id =' + id_project + ']').attr('style', 'display:normal');
        var code = null;
        $.get('/Home/getInfoProject', { id_project: id_project })
            .success(function (str) {
                if (str != "null") {
                    var tmp_str = str.split("_");
                    $('td.str_infoP[id =' + id_project + ']').empty();
                    code = '<p><b>' + tmp_str[0] + '</b>' + tmp_str[1] + '</p>';
                    code += '<p><b>' + tmp_str[2] + '</b>' + tmp_str[3] + '</p>';
                    $('td.str_infoP[id =' + id_project + ']').append(code);
                }
                else {
                    $('td.str_infoP[id =' + id_project + ']').empty();
                    code = '<p>Список пуст</p>';
                    $('td.str_infoP[id =' + id_project + ']').append(code);
                }
            });
    });

    $('button.actionProject').click(function () {
        var id_project = $(this).attr('id');
        $.ajax({
            type: "POST",
            url: "/Home/actionProject",
            async: false,
            data: { id: id_project },
            success: function () {
                $('.Tables').load('/Home/Project');
            }
        })
    });

    $(document).ready(function () {

        $('button.export_result').click(function () {
            document.location.href = "/Home/ExportToEXCEL?id_p=" + $(this).attr('id') + "&name_file=" + $(this).parent().parent().find('td').first().text();
        })

        $(".table").on("click", "td", function () {
            var id = $(this).attr('id');
            $('.PreLoader').show();
            $("#Tables").load("/Group/Manager?id_project=" + id);
            //location.href = "/Group/Manager?id_project=" + id;
        });

        //$(".table").on("click", "button", function () {
        //    alert("ewrqweq");
        //    $("#Tables").load("/Form/SingleFormView?id_q=1");
        //});


    });
    $(".table").on('mouseenter', '.project_layer', function () {
        $(this).css('background-color', '#72afff');
    });
    $(".table").on('mouseleave', '.project_layer', function () {
        $(this).css('background-color', '#fff');
    });
    $('.create_project').click(function () {
        var code = '<input type="text" class="name_project" style="display: none;"/>'
        $(this).after(code);
        $('.create_project_button').fadeOut('slow');
        $('.create_project').fadeOut('slow', function () {
            $('.name_project').fadeIn('slow');
        });
    });
    $('.table').on('keyup', '.name_project', function (event) {
        if (event.keyCode == 13) {
            var name_p;
            name_p = $(this).val();
            $(this).fadeOut('slow').remove();
            $('.create_project').text(name_p).fadeIn('slow').css('margin-right', '15px');
            $('.create_project_button').fadeIn('slow');
        }
    });
    $('.create_project_button').click(function () {
        $.get('/Home/AddProject', { name_project: $('.create_project').text() })
            .success(function (data) {
                var code = '<tr class="project_layer">' +
                    '<td id="' + data.Id + '" >' + $('.create_project').text() +
                    '</td><td>' +
                    '<a href="/Home/Edit?id="' + data.Id + '>Изменить</a>' +
                    '<a href="/Home/Details?id="' + data.Id + '>База данных</a>' +
                    '<a href="/Home/Copi?id="' + data.Id + '>Копировать</a>' +
                    '<a href="/Home/Delete?id="' + data.Id + '>Удалить</a>' +
                    '</td ></tr >';
                $('.table').append(code);
            })
            .error(function () { alert('Не удалось добавить проект') });

    });

    $('.show_blanks').click(function () {
        var id_project = $(this).attr('id');
        $.ajax({
            type: "GET",
            url: "/Home/getResultList",
            async: false,
            data: { id_project: id_project },
            success: function (data) {
                if (data.length != 0) {
                    $('.Tables').load('/Home/TableBlanks?id_project=' + id_project);
                } else {
                    alert("Список пуст");
                }
            }
        })

    });

    $('table.table').on("mouseenter", ".ExportButton", function () {
        $(this).addClass('Scaled');
    })

    $('table.table').on("mouseleave", ".ExportButton", function () {
        $(this).removeClass('Scaled');
    })

    $('table.table').on("mousedown", ".ExportButton", function () {
        $(this).addClass('NotScaled').removeClass('Scaled');
        setTimeout(function () { $('.PreLoader').hide(); }, 1000);
        
    })

    $('table.table').on("mouseup", ".ExportButton", function () {
        $(this).addClass('Scaled').removeClass('NotScaled');
        var setting = $(this).parent().find('input[name=SettingEncodeProject]').val();
        console.warn(setting);
        document.location.href = "/Home/ExportToEXCEL?id_p=" + $(this).attr('id') + "&name_file=" + $(this).parent().parent().parent().find('td').first().text() + "&encode=" + setting;
        $('.PreLoader').hide();
    })

    $('table.table').on("mouseenter", ".CheckEncode", function () {
        $(this).addClass('Scaled');
    })

    $('table.table').on("mouseleave", ".CheckEncode", function () {
        $(this).removeClass('Scaled');
    })

    $('table.table').on("mouseenter", ".ShowDB", function () {
        $(this).addClass('Scaled');
    })

    $('table.table').on("mouseleave", ".ShowDB", function () {
        $(this).removeClass('Scaled');
    })

    $('table.table').on("mousedown", ".ShowDB", function () {
        $(this).removeClass('Scaled').addClass('NotScaled');
        var id_project = $(this).attr('id');
        $.ajax({
            type: "GET",
            url: "/Home/getResultList",
            async: false,
            data: { id_project: id_project },
            success: function (data) {
                if (data.length != 0) {
                    $('.Tables').load('/Home/TableBlanks?id_project=' + id_project, null, function () { $('.PreLoader').hide(); });
                } else {
                    alert("Список пуст");
                }
            }
        })
    })
    

    $('table.table').on("mousedown", ".CheckEncode", function (event) {
        $('.ChangeEncode').removeClass("ChangeEncode");
        var encode = $(this).parent().find('input[name=SettingEncodeProject]').val();
        $(this).addClass("ChangeEncode");
        setTimeout(function () { $('.PreLoader').hide(); }, 1000);
        var offset_x = event.clientX;
        var offset_y = event.clientY;
        console.warn(encode);
        $('.EncodingString').find('div[name=' + encode + ']').find('input').prop('checked', true);
        var setting = document.getElementById('EncodingString');
        setting.style.display = "block";
        setting.style.left = (offset_x-15) + "px";
        setting.style.top = (offset_y-15) + "px";
        $(document).mouseup(function (event) {
            var container = $('.EncodingString');
            if (container.has(event.target).length === 0) {
                container.hide();
                $('.ChangeEncode').removeClass('ChangeEncode');
            }
        });
    })

    $('.EncodingString input[name=setting]').change(function () {
        if ($(this).is(":checked")) {
            //alert($(this).parent().attr('name'));
            $('.ChangeEncode').parent().find('input[name=SettingEncodeProject]').val($(this).parent().attr('name'));
            var encode_str = $(this).parent().attr('name');
            var id_project = $('.ChangeEncode').parent().find('.ExportButton').attr('id');
            $.post("/Home/ChangeEncodeProject", { id: id_project, encode: encode_str })
                .success(function () { $('.EncodingString').hide(); });
        }
    })
</script>
