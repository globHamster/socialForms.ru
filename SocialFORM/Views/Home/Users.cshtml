@model PagedList.IPagedList<SocialFORM.Models.UserViewModel>
@using PagedList.Mvc;

@Scripts.Render("~/scripts/jquery-1.10.2.js")

<link href="~/Content/themes/ui/jquery-ui.css" rel="stylesheet" type="text/css" />
<link href="~/Content/themes/ui/theme.css" rel="stylesheet" type="text/css" />
<link href="~/Content/ui.jqgrid.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>
<script src="~/Scripts/i18n/grid.locale-ru.js" type="text/javascript"></script>

<style>
    body {
        background-color: #f0f0ffa;
    }

    .ui-jqgrid .ui-pg-input {
        height: 20px;
    }

    .ui-jqgrid .ui-jqgrid-pager {
        height: 50px;
    }

    #gbox_jqg {
        height: 100%;
    }

    .ui-jqgrid-bdiv {
        height: 600px !important;
    }

    .FormGrid {
        height: auto !important;
    }
</style>

<table id="jqg"></table>
<div id="jpager"></div>
<script type="text/javascript">
$(document).ready(function () {
    $("#jqg").jqGrid({
        url: '@Url.Action("GetData")',
        datatype: "json",
        colNames: ['Id', 'Логин', 'Имя', 'Фамилия', 'Пароль', 'Возрост', 'Пол', 'Email', 'Ученик', 'Роль'],
        colModel: [
            { name: 'IdView', index: 'IdView', width: 30, stype: 'text', key: true, editable: true, hidden: true },
            { name: 'LoginView', index: 'LoginView', width: 150, sortable: true, editable: true, edittype: 'text' },
            { name: 'NameView', index: 'NameView', width: 150, sortable: true, editable: true, edittype: 'text' },
            { name: 'FamilyView', index: 'FamilyView', width: 100, sortable: true, editable: true, edittype: 'text' },
            { name: 'PasswordView', index: 'PasswordView', width: 100, sortable: true, editable: true, edittype: 'text' },
            { name: 'AgeView', index: 'AgeView', width: 100, sortable: true, editable: true, edittype: 'text' },
            { name: 'FoolView', index: 'FoolView', width: 100, sortable: true, editable: true, edittype: 'select', editoptions: { value: "Мужской:Мужской;Женский:Женский" } },
            { name: 'EmailView', index: 'EmailView', width: 100, sortable: true, editable: true, edittype: 'text' },
            { name: 'SchoolDayView', index: 'SchoolDayView', width: 100, sortable: true, editable: true, edittype: 'checkbox', editoptions: { value: "true:false" } },
            { name: 'RoleView', index: 'RoleView', width: 100, sortable: true, editable: true, edittype: 'select', editoptions: { value: "1:Admin; 2:Operator" } }
        ],
        rowNum: 10,
        rowList: [10, 20, 30],
        width:800,
        pager: '#jpager',
        loadonce:true,
        sortname: 'Id',
        sortorder: "desc",
        caption: "Список Пользователей"
    });
    $("#jqg").jqGrid('navGrid', '#jpager', {

        search: true,
        searchtext: "Поиск",
        refresh: false,
        add: true, // добавление
        del: true, // удаление
        edit: true, // редактирование
        view: true, // просмотр записи
        viewtext: "Смотреть",
        viewtitle: "Выбранная запись",
        addtext: "Добавить",
        edittext: "Изменить",
        deltext: "Удалить"
    },
    update("edit"), // обновление
    update("add"), // добавление
    update("del") // удаление
    );
    function update(act) {
        return {
            closeAfterAdd: true, // закрыть после добавления
            height: 250,
            width: 400,
            closeAfterEdit: true, // закрыть после редактирования
            reloadAfterSubmit: true, // обновление
            drag: true,
            onclickSubmit: function (params) {
                var list = $("#jqg");
                var selectedRow = list.getGridParam("selrow");
                rowData = list.getRowData(selectedRow);
                if (act === "add")
                    params.url= '@Url.Action("Create")';
                else if (act === "del")
                    params.url = '@Url.Action("Delete")';
                else if (act === "edit")
                    params.url = '@Url.Action("Edit")';
            },
            afterSubmit: function (response, postdata) {
                // обновление грида
                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')
                return [true, "", 0]
            }
        };
    };
});
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $(".DeleteUser").click(function () {
            var parrent = $(this).parent('td').parent('tr');
            $.ajax({
                type: "POST",
                url: "/Delete/Delete",
                data: { Id: + $(this).attr("id") },
                ajaxasync: true,
                success: function () {
                    parrent.remove();
                },
                error: function (data) {
                }
            });
        })
    })
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $('.ViewUser').click(function (e) {
            e.preventDefault();
            var Id = $(this).attr("id");
            $('#Tables').load("/User/ViewUser?Id=" + Id);
        })
    })
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $('.EditUser').click(function (e) {
            e.preventDefault();
            var Id = $(this).attr("id");
            $('#Tables').load("/User/EditUser?Id=" + Id);
        })
    })
</script>