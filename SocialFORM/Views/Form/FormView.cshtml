<style>
    .tool_layer {
        border-bottom: 1px solid black;
        height: 35px;
    }

    .view_form {
        padding: 20px;
        margin-bottom: 15px;
        background-color: #ccc;
    }

    .answer_table {
        margin-bottom: 20px;
    }

    div.title {
        padding: 20px;
        border: 2px solid black;
        background-color: #72afff;
        text-align: center;
        font-size: 30px;
        font-family: 'Courier New';
        font-weight: 900;
    }

    div.wrong_choise {
        padding: 5px;
        margin: 5px;
        display: none;
        border: 1px solid red;
        background-color: #ff9999;
    }

    tr.table_answer:first-child {
        background-color: #72afff;
    }

    td.table_answer:first-child {
        background-color: #72afff;
    }

    td.table_answer {
        border: 1px solid black;
        text-align: center;
        min-width: 20px;
    }

    #map {
        width: 600px;
        height: 400px;
        padding: 0;
        margin: 0;
    }
</style>
<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/chosen.css" rel="stylesheet" />

<script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
<div class="title">@ViewBag.Title</div>
<div name="projectID" id="@ViewBag.ProjectID" style="display: none;" />
<div name="operatorID" id="@ViewBag.ProjectID" style="display: none;" />
<div name="questionID" id="@ViewBag.QuestionID" style="display: none;" />
<div>
    <br />
    <div class="show_result">
        <table width="100%">
            <tr>
                <td colspan="3">
                    <div class="view_form">

                    </div>
                    <div class="wrong_choise">Выберите вариант ответа</div>
                    <div class="answer_panel">
                        <table width="100%" class="answer_table"></table>

                    </div>
            </tr>
            <tr>
                <td align="left" width="5%">
                    <button class="previous"><</button>
                </td>
                <td class="index_question" align="center"></td>
                <td align="right" width="5%">
                    <button class="next">></button>
                </td>
            </tr>
        </table>
    </div>
    <button class="all_again" style="margin-top: 20px;">Начать заново</button>
    <br />

</div>

<script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
    var type_q;
    var id_q, id_a;
    var id_project = $('div[name=projectID]').attr('id');
    var id_operator = $('div[name=operatorID]').attr('id');
    var isReload = false;
    var index = 0, max_index = 0;
    var massiv_question_id;
    var result = [];
    var text_other = [];
    var list_base_answer = {};
    var list_transition;
    var list_blocks = {};
    var list_question = {};
    var list_answer = {};
    var list_id_answer_all = {};
    var list_bind_answer_group = {};
    var list_table_row;
    var list_massk = {};
    var list_file = {};
    var list_text_file = {};
    var list_id_question_group = {};
    var list_group = {};
    var list_question_bind_group = {};
    var begin_time, end_time; //Время начала анкетирования
    var status = 0;
    var is_load_id = false;
    var active_group = {};
    var q1, q2, q3, q4, q5, q6, q7;
    var count_ajax = 0;
    //Блок выгрузки данных
    {

        //подгрузка листа сс базовыми ответами
        q1 = $.get("/Question/getListAnswerBase")
            .success(function (server_data) {
                $.each(server_data, function (i, item) {
                    list_base_answer[item.Id] = item;
                })
                //console.log('Загргузка базовых вопросов успешна ', list_base_answer);
                count_ajax++;
            })
            .error(function (err) { console.error("Ошибка выгрузки данных ... /Question/getListAnswerBase ", err) });
        //Подгрузка таблицы переходов
        q2 = $.get("/Question/getListTransition", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (data) {
                list_transition = data;
                //console.info('Загрузка таблицы переходов успешна ---', list_transition);
                count_ajax++;
            })
            .error(function (err) { console.error('Ошибка загрузки таблицы переходов .../Question/getListTransition ', err); });
        //Подгрузка таблицы переходов
        $.get("/Question/getListBlocks", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (data) {
                $.each(data, function (i, item) {
                    if (list_blocks[item.fromQuestion] == null || list_blocks[item.fromQuestion] == undefined)
                        list_blocks[item.fromQuestion] = [item];
                    else
                        list_blocks[item.fromQuestion].push(item);
                });
                console.info('Загрузка таблицы блокировок успешна ---', list_blocks);
                count_ajax++;
            })
            .error(function (err) { console.error('Ошибка загрузки таблицы блокировок .../Question/getListBlocks ', err); });
        //Подгузка листа вопросов относящихся к проекту
        q3 = $.get("/Question/getListQuestion", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (server_data) {
                $.each(server_data, function (i, item) {
                    list_question[item.Id] = item;
                })
                console.info("Успешная выгрузка данных ---", list_question);
                count_ajax++;
            })
            .error(function (err) { console.error("Ошибка выгрузки данных ... /Question/getListQuestion", err) });
        //Подгрузка упорядоченного листа id вопросов
        q4 = $.get("/Group/getIdQuestionGroup", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (server_data) {
                massiv_question_id = server_data;
                //console.info("Успешная выгрузка данных --- ", massiv_question_id);
                count_ajax++;
                is_load_id = true;
            })
            .error(function (err) { console.error("Ошибка выгрузки данных ... /Group/getIdQuestionGroup ", err) });

        //Подгрузка листа масок
        $.get("/Question/getListMassk")
            .success(function (server_data) {
                $.each(server_data, function (i, data) {
                    list_massk[data.Id] = data.TextMassk;
                })
                //console.info("Успешная выгрузка листа масок ---- ", list_massk);
                count_ajax++;
            })
            .error(function (err) { console.error("Ошибка выгрузка данных ... /Question/getListMassk", err) })

        //Подгрузка листа ответов
        $.when(q4).then(function () {
            q5 = $.get("/Question/getAllAnswerGrow", { massiv: massiv_question_id.join() })
                .success(function (server_data) {
                    $.each(server_data, function (i, item) {
                        list_answer[item.Id] = item;
                    })
                    //console.info("Успешная выгрузка данных листа ответов --- ", list_answer);
                    count_ajax++;
                })
                .error(function (err) { console.error("Ошибка выгрузка данных ... /Question/getAllAnswerGrow ", err) })
        })

        //Подгрузка листа id всех ответов
        $.when(q4).then(function () {
            q6 = $.get("/Question/getIdAnswerAllGrow", { massiv: massiv_question_id.join() })
                .success(function (server_data) {
                    list_id_answer_all = server_data;
                    $.each(server_data, function (i, item) {
                        if (item.BindGroup != null) {
                            list_bind_answer_group[item.AnswerKey] = item;
                            if (list_question_bind_group[item.QuestionID] == null)
                                list_question_bind_group[item.QuestionID] = [item.BindGroup];
                            else
                                list_question_bind_group[item.QuestionID].push(item.BindGroup);
                        }
                    })
                    //console.log("Сформирован список вопросов связаных с группой : ", list_question_bind_group);
                    //console.info("Сформировон массив связок с группой --->", list_bind_answer_group);
                    //console.info("Успешная выгрузка данных листа id всех ответов  --- ", list_id_answer_all);
                    count_ajax++;
                })
                .error(function (err) { console.error("Ошибка выгрузка данных ... /Question/getIdAnswerAllGrow", err) })
        })

        //Подгрузка листа строк табличного вопроса
        $.when(q4).then(function () {
            q7 = $.get("/Question/getAllTableRow", { massiv: massiv_question_id.join() })
                .success(function (server_data) {
                    list_table_row = server_data;
                    //console.info("Успешная выгрузка данных --- ", list_table_row);
                    count_ajax++;
                })
                .error(function (err) { console.error("Ошибка выгрузка данных ... /Question/getAllTableRow", err) })
        })

        //Выгрузка листа путей файлов для фильтрующего вопроса
        $.get("/Question/GetListFile", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (server_data) {
                $.each(server_data, function (i, item) {
                    list_file[item.QuestionID] = item;
                    console.info("Path file ---- ", item.PathFile);
                    $.get("/Group/Load", { path: item.PathFile })
                        .success(function (server_file) {
                            list_text_file[item.QuestionID] = server_file;
                        });
                })
                //console.info("Успешная выгрузка листа путей файла --- ", list_file);
                //console.info("Успешная выгрузка листа текста файла --- ", list_text_file);
            })
            .error(function (err) { console.error("Ошибка выгрузки данных ... /Question/GetListFile", err); })

        //Выгрузка листа групп
        $.get("/Group/GetListALLGoup", { id_p: $('div[name=projectID]').attr('id') })
            .success(function (server_data) {
                $.each(server_data, function (i, item) {
                    var mas_tmp = [];
                    if (item.GroupID > 0)
                        active_group[item.GroupID] = false;
                    if (list_id_question_group[item.GroupID] == null) {
                        mas_tmp.push(item);
                        list_id_question_group[item.GroupID] = mas_tmp;
                    } else {
                        list_id_question_group[item.GroupID].push(item);
                    }
                    if (item.GroupID > 0)
                        list_group[item.QuestionID] = item.GroupID;
                });
                //console.log("Активность группы :", active_group);
                //console.log("Лист группы по вопросам : ", list_group);
                //console.info("list group --->", list_id_question_group);
            })
    }

    //Ожидание выгрузки данных с сервера
    var interval = setInterval(function () {
        if (count_ajax > 8) {
            clearInterval(interval);
            getStart();
        }
    }, 50);

    //Блок отрисовки анкеты
    function getStart() {
        if (index >= massiv_question_id.length) {
            $(".show_result").load("/Form/showResult");
        } else {
            $('body,html').animate({ scrollTop: 0 }, 500);
            if (index == 1 && status == 0) {
                $.get("/Form/GetServerTime")
                    .success(function (server_time) {
                        if (begin_time == undefined)
                            begin_time = server_time;
                        status = 1;
                        console.log("Test time   ", begin_time);
                    })
                    .error(function () { alert("Error"); })
            }
            if (index == massiv_question_id.length - 1) {
                $.get("/Form/GetServerTime")
                    .success(function (server_time) {
                        if (end_time == undefined)
                            end_time = server_time;
                        console.log("Test time   ", end_time);
                    })
            }
            if (index == 1) {
                $('button.previous').hide();
            } else if (index > 1) {
                $('button.previous').show();
            }

            id_q = massiv_question_id[index];
            type_q = list_question[id_q].TypeQuestion;
            $('.view_form').html(list_question[id_q].TextQuestion);
            $('.answer_table').empty();
            switch (type_q) {
                // Прорисовка ответос Single
                case 1:
                    var skip = false;
                    if (CheckCountAnswer(id_q) > 25 && result[massiv_question_id[index]] == undefined) ShowListSearchAnswer();
                    else {
                        $.each(list_id_answer_all, function (i, item) {
                            if (item.QuestionID == id_q) {
                                skip = Check_blocks(item);
                                if (skip) { skip = false; return; }
                                if (item.AnswerType == 1) {
                                    if (list_answer[item.AnswerKey].isFreeArea) {
                                        $('.answer_table').append('<tr class="tool_layer"><td><input type="radio" name="group" id="' + item.AnswerKey + '"> ' + list_answer[item.AnswerKey].AnswerText + '<input type="checkbox" class="is_free_area" hidden checked/></td></tr>')
                                    } else {
                                        $('.answer_table').append('<tr class="tool_layer"><td><input type="radio" name="group" id="' + item.AnswerKey + '"> ' + list_answer[item.AnswerKey].AnswerText + '<input type="checkbox" class="is_free_area" hidden/></td></tr>')
                                    }
                                }
                                else
                                    $('.answer_table').append('<tr class="tool_layer base_answer"><td><input type="radio" name="group" id="' + list_base_answer[item.AnswerKey].BaseIndex + '"> ' + list_base_answer[item.AnswerKey].AnswerText + '</td></tr>')
                            }
                        })
                    }
                    FindAnswer();
                    break;
                // Прорисовка ответов Multi
                case 2:
                    var skip = false;
                    $.each(list_id_answer_all, function (i, item) {
                        if (item.QuestionID == id_q) {
                            skip = Check_blocks(item);
                            if (skip) { skip = false; return; }
                            if (item.AnswerType == 1) {
                                if (list_answer[item.AnswerKey].isFreeArea) {
                                    $('.answer_table').append('<tr class="tool_layer"><td><input type="checkbox" name="group" id="' + item.AnswerKey + '"> ' + list_answer[item.AnswerKey].AnswerText + '<input type="checkbox" class="is_free_area" hidden checked/></td></tr>')
                                } else {
                                    $('.answer_table').append('<tr class="tool_layer"><td><input type="checkbox" name="group" id="' + item.AnswerKey + '"> ' + list_answer[item.AnswerKey].AnswerText + '<input type="checkbox" class="is_free_area" hidden/></td></tr>')
                                }
                            }
                            else
                                $('.answer_table').append('<tr class="tool_layer base_answer"><td><input type="checkbox" name="group" id="' + list_base_answer[item.AnswerKey].BaseIndex + '"> ' + list_base_answer[item.AnswerKey].AnswerText + '</td></tr>')
                        }
                    })
                    FindAnswer();
                    break;
                case 3:
                    $.each(list_id_answer_all, function (i, item) {
                        if (item.QuestionID == id_q) {
                            if (item.AnswerType == 1) {
                                $('.answer_table').append('<tr class="tool_layer"><td>' + list_answer[item.AnswerKey].AnswerText + '<input type="text" class="free_text" name="group" id="' + item.AnswerKey + '" /></td></tr>')
                            } else {
                                $('.answer_table').append('<tr class="tool_layer"><td><input type="radio" name="group" id="' + item.AnswerKey + '"> ' + list_base_answer[item.AnswerKey].AnswerText + '</td></tr>')
                            }
                        }
                    });
                    var id_massk = list_question[massiv_question_id[index]].TypeMassk;
                    if (id_massk > 0) {
                        //console.info("id_massk ---- ", id_massk);
                        BindMassk(id_massk);
                    }
                    FindAnswer();
                    break;
                case 4:
                    var skip = false;
                    var tmp_table_row = {};
                    var count_table_row = 1;
                    var count_table_colum = 1;
                    var code = '';
                    code += '<tr class="table_answer beginer"><td class="table_answer"> </td>'
                    $.each(list_id_answer_all, function (i, item) {
                        if (item.QuestionID == id_q) {
                            code += '<td  class="table_answer" id="' + count_table_colum + '" name="' + item.AnswerKey + '">' + list_answer[item.AnswerKey].AnswerText + '</td>';
                            count_table_colum++;
                        }
                    })
                    code += '</tr>';
                    $.each(list_table_row, function (i, item) {
                        if (item.TableID == id_q) {
                            if (list_question[massiv_question_id[index]].Bind != null) {
                                //console.info("index ---- ", list_answer[result[Number(massiv_question_id.indexOf(list_question[massiv_question_id[index]].Bind))]]);

                                if (list_question[list_question[massiv_question_id[index]].Bind].TypeQuestion == 6) {
                                    if (item.IndexRow != null && item.IndexRow != result[massiv_question_id.indexOf(list_question[massiv_question_id[index]].Bind)]) {
                                        return;
                                    }
                                } else if (item.IndexRow != null && item.IndexRow != list_answer[result[Number(massiv_question_id.indexOf(list_question[massiv_question_id[index]].Bind))]].Index)
                                    return;
                            }
                            //console.info("___________>", item);
                            //console.info("________>", result[massiv_question_id.indexOf(list_question[id_q].Bind_Blocks)]);
                            skip = Check_blocks_Row(item);
                            if (skip) { skip = false; return; }
                            code += '<tr class="table_answer" id="' + count_table_row + '"><td class="table_answer">' + item.TableRowText + '</td>';
                            for (var c = 1; c < count_table_colum; c++) {
                                code += '<td class="table_answer tool_layer"><input type="radio" name="group' + count_table_row + '" id="' + c + '"></td>';
                            }
                            code += '</tr>';
                            count_table_row++;
                        }
                    })
                    $('.answer_table').append(code);
                    FindAnswer();
                    break;
                case 5:
                    break;
                case 6:
                    var availableTags = [];
                    //var path_file = list_file[massiv_question_id[index]].PathFile;
                    // console.info("path --- ", path_file);

                    var tmp_massive = {};
                    $.each(list_text_file[massiv_question_id[index]], function (i, item) {
                        var tmp_str = item.split('#');
                        availableTags.push(tmp_str[0]);
                        tmp_massive[tmp_str[0]] = tmp_str[1];
                    })

                    var code = '';
                    code += '<select data-placeholder="Choose a Country..." class="chosen-select-new">';
                    code += '<option value="">Выберите вариант ответа.</option>';
                    $.each(availableTags, function (i, item) {
                        code += '<option value="' + tmp_massive[item] + '">' + item + '</option>';
                    })
                    code += '</select>'
                    $('.answer_table').append(code);
                    $('.chosen-select-new').chosen();
                    $('.chosen-select-new').change(function () {
                        $('span.uik').remove();
                        code = '<span class="uik">' + $(this).find('option:checked').val() + '</span>';
                        $('.answer_table').append(code);
                    })
                    break;
                default:
                    break;

            }
        }
    }

    //Проверка активности группы при проходе вперед
    function CheckGroup() {

        if (list_group[massiv_question_id[index]] != null) {
            var number_group = list_group[massiv_question_id[index]];
            if (active_group[number_group] == false) {
                var length_group = list_id_question_group[number_group].length;
                for (var i = index; i < index + length_group; i++) {
                    result[i] = -404;
                    text_other[i] = ['null'];
                }
                index += length_group;
                CheckGroup();
            } else {

            }
        }
    }

    //Проверка активности группы при возврате назад
    function CheckGroup_Back() {
        if (list_group[massiv_question_id[index]] != null) {

            var number_group = list_group[massiv_question_id[index]];
            if (active_group[number_group] == false) {
                var length_group = list_id_question_group[number_group].length;
                for (var i = index; i < index + length_group; i++) {
                    result[i] = -404;
                    text_other[i] = ['null'];

                }
                index -= length_group;
                CheckGroup_Back();
            } else {

            }
        }
    }

    //Осуществление шага вперед по анкете
    $(".next").click(function () {
        //  $.when(function () {

        switch (type_q) {
            case 1:
                if ($("input[name=group]:radio:checked").length == 0) {
                    $('div.wrong_choise').fadeIn('slow');
                    //     $('div.limit_checked_div').remove();
                }
                else {
                    $('div.wrong_choise').fadeOut('fast');
                    if ($('textarea.text_free_area').length > 0 && $('textarea.text_free_area').is(":visible")) {
                        if ($('textarea.text_free_area').val() == "") {
                            $('textarea.text_free_area').animate({
                                backgroundColor: 'red'
                            }, 500).animate({ backgroundColor: 'white' }, 500);
                            break;
                        }

                    }
                    SaveResult();
                    CheckGroupGo();
                    checkTransitionGo();
                    CheckGroup();
                    getStart();
                    //    goNext();
                }
                break;
            case 2:
                if ($("input[name=group]:checkbox:checked").length == 0) {
                    $('div.wrong_choise').fadeIn('slow');
                    $('div.limit_checked_div').remove();
                }
                else {
                    $('div.wrong_choise').fadeOut('fast');
                    if ($('textarea.text_free_area').length > 0 && $('textarea.text_free_area').is(":visible")) {
                        if ($('textarea.text_free_area').val() == "") {
                            $('textarea.text_free_area').animate({
                                backgroundColor: 'red'
                            }, 500).animate({ backgroundColor: 'white' }, 500);
                            break;
                        }

                    }
                    SaveResult();
                    CheckGroupGo();
                    index++;
                    CheckGroup();
                    getStart();
                    //    goNext();
                }
                break;
            case 3:
                if ($("input:text").val().length == 0) {
                    $('div.wrong_choise').fadeIn('slow');
                    //             $('div.limit_checked_div').remove();
                }
                else {
                    $('div.wrong_choise').fadeOut('fast');
                    SaveResult();
                    index++;
                    getStart();
                    //goNext();
                }
                break;
            case 4:

                var count_row = $('tr.table_answer').length - 1;
                if ($('input[name^=group]:checked').length == count_row) {

                    $('div.wrong_choise').fadeOut('fast');
                    SaveResult();
                    CheckGroupGo();
                    index++;
                    CheckGroup();
                    getStart();
                    //   goNext();
                } else {
                    $('div.wrong_choise').fadeIn('slow');
                    //             $('div.limit_checked_div').remove();
                }
                break;
            case 5:
                SaveResult();
                index++;
                getStart();
                break;
            case 6:
                SaveResult();
                index++;
                getStart();
                break;
            default:
                break;
        }
    });

    //Сохранении выбранного ответа в массиве result
    function SaveResult() {
        var mas = [];
        switch (type_q) {
            case 1:
                id_a = $("input:radio:checked").attr('id');
                if ($("input:radio:checked").hasClass("base_answer")) {

                    result[index] = [$("input:radio:checked").parent().parent().attr('id')];
                } else {
                    result[index] = [id_a];
                }
                if ($("input:radio:checked").parent().find('input.is_free_area').prop('checked')) {
                    text_other[index] = [$("input:radio:checked").parent().find('textarea.text_free_area').val()];
                } else {
                    text_other[index] = ['null'];
                }
                break;
            case 2:
                var text_mass = '';
                $.each($("input[name=group]:checkbox:checked"), function () {
                    if ($(this).hasClass('base_answer'))
                        mas.push($(this).parent().parent().attr('id'));
                    else
                        mas.push($(this).attr('id'));
                    if ($(this).parent().find('input.is_free_area').prop('checked')) {

                        text_mass += $(this).attr('id') + '#' + $(this).parent().find('textarea.text_free_area').val() + ',';
                    }
                });
                result[index] = mas;
                if (text_mass != '') {
                    text_other[index] = [text_mass.substr(0, text_mass.length - 1)];
                } else {
                    text_other[index] = ['null'];
                }
                break;
            case 3:
                $('input.free_text').each(function () {
                    mas.push($(this).attr('id') + "#" + $(this).val().replace(',', ';'));
                });
                console.info("mas result ---- ", mas);
                result[index] = mas;
                text_other[index] = ['null'];
                break;
            case 4:
                $('tr.table_answer').each(function () {
                    var id;
                    if ($(this).find('input:radio:checked').attr('id') != undefined) {
                        id = $(this).find('input:radio:checked').attr('id');
                        mas.push($('tr.beginer').find('td[id=' + id + ']').attr('name'));
                    }
                });
                console.info("data table ---- ", mas);
                result[index] = mas;
                text_other[index] = ['null'];
                break;
            case 5:
                result[index] = [-1];
                text_other[index] = ['null'];
                break;
            case 6:
                if (!isNaN($('span.uik').text())) {
                    result[index] = Number($('span.uik').text());
                    text_other[index] = $('select.chosen-select-new option:checked').text();
                } else {
                    result[index] = Number($('select.chosen-select-new option:checked').text());
                    text_other[index] = $('span.uik').text();
                }
                break;
            default:
                break;
        }
    }

    //Проверка перехода при проходе вперед
    function checkTransitionGo() {
        var code_transition = find_transition_move(id_q, result[index]);
        if (code_transition >= 0) {
            if (result[index] == list_transition[code_transition].TriggerAnswer) {
                var jump_index;
                list_transition[code_transition].ActiveTransition = true;
                jump_index = massiv_question_id.indexOf(list_transition[code_transition].toQuestion);
                for (var i = index + 1; i < jump_index; i++) {
                    result[i] = [-404];
                    text_other[i] = ['null'];
                }
                index = jump_index;
            } else {

                index++;
            }
        } else {

            index++;
        }
    }

    //Проверка перехода при возращении назад
    function checkTransitionBack() {
        var code_transition = find_transition_back(massiv_question_id[index]);
        if (code_transition >= 0) {

            index = massiv_question_id.indexOf(list_transition[code_transition].fromQuestion);
            list_transition[code_transition].ActiveTransition = false;
        } else {
            index--;
        }
    }

    //Проверка выбраного ответа на прикрепленность к переходу к группе
    function CheckGroupGo() {
        switch (type_q) {
            case 1:
                if (list_bind_answer_group[result[index]] != null) {
                    var number_group = list_bind_answer_group[result[index]].BindGroup;
                    var mas_tmp = list_question_bind_group[id_q];
                    $.each(mas_tmp, function (i, item) {
                        active_group[item] = false;
                    })
                    active_group[number_group] = true;
                } else if (list_question_bind_group[id_q] != null) {
                    var mas_tmp = list_question_bind_group[id_q];
                    $.each(mas_tmp, function (i, item) {
                        active_group[item] = false;
                    })
                }
                break;
            case 2: {
                var mas_tmp = result[index];
                var mas_tmp_2 = list_question_bind_group[id_q];
                if (mas_tmp_2 != undefined) {
                    $.each(mas_tmp_2, function (i, item) {
                        active_group[item] = false;
                    })
                    $.each(mas_tmp, function (i, item) {
                        if (list_bind_answer_group[item] != null) {
                            var number_group = list_bind_answer_group[item].BindGroup;
                            active_group[number_group] = true;
                        }
                    })
                }
            }
                break;
            case 4: {

                var mas_tmp = result[index];
                var mas_tmp_2 = list_question_bind_group[id_q];

                if (mas_tmp_2 != undefined) {
                    $.each(mas_tmp_2, function (i, item) {

                        active_group[item] = false;
                    });
                    $.each(mas_tmp, function (i, item) {
                        if (list_bind_answer_group[item] != null) {
                            var number_group = list_bind_answer_group[item].BindGroup;
                            active_group[number_group] = true;
                        }
                    });
                }
            }
                break;
            default:
                break;
        }
    }

    //Поиск выбранных ответ в массиве result
    function FindAnswer() {
        if (result[index] != null) {
            switch (type_q) {
                case 1:
                    var tmp = $('.answer_table').find('input[id=' + result[index] + ']');
                    tmp.prop('checked', true);
                    if (tmp.parent().find('input.is_free_area').is(':checked')) {
                        tmp.parent().find('input.is_free_area').after('<textarea class="text_free_area"  style="margin-left: 10px; width: 600px; height: 50px; resize: none; display: none"></textarea>');
                        tmp.parent().find('.text_free_area').slideDown(200).text(text_other[index]);
                    }
                    break;
                case 2:
                    var mas_ans = {};
                    var tmp_str = String(text_other[index]).split(',');
                    var is_check_base_answer = false;
                    $.each(tmp_str, function (i, item) {
                        var str = item.split('#');
                        mas_ans[str[0]] = str[1];
                    });
                    $.each(result[index], function (i, item) {
                        var tmp = $('.answer_table').find('input[id=' + item + ']');
                        tmp.prop('checked', true);
                        if (tmp.parent().parent().hasClass('base_answer')) {
                            is_check_base_answer = true;
                            checkedAnswerBase(tmp.parent().parent());
                        } else if (tmp.parent().find('input.is_free_area').is(':checked')) {
                            tmp.parent().find('input.is_free_area').after('<textarea class="text_free_area"  style="margin-left: 10px; width: 600px; height: 50px; resize: none; display: none"></textarea>');
                            tmp.parent().find('.text_free_area').slideDown(200).text(mas_ans[item]);
                        }
                    })
                    if (!is_check_base_answer) CheckLimitAnswer();
                    break;
                case 3:
                    var mas_ans = [];
                    var tmp_str = String(result[index]).split(',');
                    $.each(tmp_str, function (i, item) {
                        var str = item.split('#');
                        mas_ans.push(str);
                    });
                    $.each(mas_ans, function (i, item) {
                        var tmp = $('.answer_table').find('input[id=' + item[0] + ']');
                        tmp.val(item[1]);
                        /* if (tmp.parent().parent().hasClass('base_answer')) {
                             checkedAnswerBase(tmp.parent().parent());
                         } */
                    })
                    break;
                case 4:
                    var massive = result[index];
                    var count = 0;
                    for (var i = 1; i <= massive.length; i++) {
                        var id_radio = $('tr.beginer td[name="' + massive[i - 1] + '"').attr('id');
                        $('tr[id="' + i + '"').find('input[id="' + id_radio + '"]').prop('checked', true);
                    }
                    break;
                default:
                    break;
            }
        }

    }

    function BindMassk(id_massk) {
        $('.answer_table input[name=group]').bind("change keyup input", function () {
            if (this.value.match(RegExp(String(list_massk[id_massk])))) {
                this.value = this.value.substr(0, this.value.length - 1);
            }

        });
    }

    function CheckCountAnswer(check_id_question) {
        var count = 0;
        $.each(list_id_answer_all, function (i, data) {
            if (data.QuestionID == check_id_question) {
                count++;
            }
        })
        return count;
    }

    function ShowListSearchAnswer() {
        var code = '<input type="type" class="search_answer"/>';
        $('.answer_table').append(code);


        $('input.search_answer').keyup(function () {
            $('.answer_table').find('div.change_answer_table').remove();
            var text_search = $(this).val();
            var change_list = {};
            var data = {};
            $.each(list_answer, function (i, it_data) {
                if (it_data.QuestionID == id_q) {
                    data[it_data.Id] = it_data;
                }
            })
            var count = 0;
            $.each(data, function (i, item) {
                if (String(item.AnswerText).toLowerCase().substr(0, text_search.length) == text_search.toLowerCase()) {
                    change_list[item.Id] = item;
                    count++;
                    change_list['length'] = count;
                }
            });
            console.info("cchange list -0---- ", change_list);
            if (change_list.length > 0) {
                delete change_list['length'];
                code = '<div class="change_answer_table"><table>';
                $.each(change_list, function (i, item) {
                    if (result[massiv_question_id[index]] == undefined)
                        code += '<tr class="tool_layer"><td><input type="radio" name="group" id ="' + item.Id + '"/><span>' + item.AnswerText + '</span></td></tr>';
                    else {
                        console.info("op[wpeoropwre ------- ", result[massiv_question_id[index]]);
                        if (result[massiv_question_id[index]] == item.Id)
                            code += '<tr class="tool_layer"><td><input type="radio" name="group" id ="' + item.Id + '" checked/><span>' + item.AnswerText + '</span></td></tr>';
                        else
                            code += '<tr class="tool_layer"><td><input type="radio" name="group" id ="' + item.Id + '"/><span>' + item.AnswerText + '</span></td></tr>';
                    }
                });
                code += '</table></div>';
                $('.answer_table').append(code);
            }
        })

    }

    //Осуществление шага назад по анкете
    $('.previous').click(function () {
        var arg;
        if (index > 0) {
            if (type_q == 2) $('div.limit_checked_div').remove();
            $('div.wrong_choise').hide();
            SaveResult();
            checkTransitionBack();
            CheckGroup_Back();
            getStart();
        }
    });
    $(document).off("mouseenter", ".tool_layer");
    $(document).on("mouseenter", ".tool_layer", function () {
        if ($(this).find('input[name=group]').is(':disabled')) {
            $(this).css({
                'cursor': 'not-allowed',
                'background-color': 'rgba(200, 0 , 0 , 0.7)'
            })
        } else {
            $(this).css('background-color', '#72afff')
                .css('cursor', 'pointer');
        }
    });
    $(document).off("mouseleave", ".tool_layer");
    $(document).on("mouseleave", ".tool_layer", function () {

        $(this).css('background-color', '#fff')
            .css('cursor', 'default');
    });

    $('.answer_table').off('click', '.tool_layer');
    $('.answer_table').on('click', '.tool_layer', function () {
        checkedAnswer($(this));
        if (type_q == 2) {
            var is_check_base_answer = true;
            $('.answer_panel').find('tr.base_answer').each(function () {
                if ($(this).find('input').is(":checked")) {
                    is_check_base_answer = false;
                }
            });
            if (is_check_base_answer) CheckLimitAnswer();
        }
        if ($(this).hasClass('base_answer') && !$(this).find('input[name=group]').is(':disabled')) {
            checkedAnswerBase($(this));
        }

    });

    $('.answer_table').on('mouseenter', 'textarea.text_free_area', function () {
        $('.answer_table').off('click', '.tool_layer');
    });
    $('.answer_table').on('mouseleave', 'textarea.text_free_area', function () {
        $('.answer_table').on('click', '.tool_layer', function () {
            checkedAnswer($(this));
            if ($(this).hasClass('base_answer') && !$(this).find('input[name=group]').is(':disabled')) {
                checkedAnswerBase($(this));
            }
        });
    });

    $('button.all_again').click(function () {
        $('#Tables').load('/Form/FormView?id_p=' + $('div[name=projectID]').attr('id'), '', function () { $('div.waiting_screen').remove(); });
    })


    //Дополнительные функции
    function Check_blocks(item) {
        var skip = false;

        if (list_blocks[id_q] != null) {
            if (list_blocks[id_q].length > 1) {

                console.log("List block length ===== ", list_blocks[id_q].length);
                $.each(list_blocks[id_q], function (i, item_block) {
                    //--------
                    console.log("List block length ===== ", item_block);
                    if (item_block.fromQuestion == id_q && item_block.typeBlock == 1) {
                        $.each(result[massiv_question_id.indexOf(Number(item_block.toQuestion))], function (i, item_tmp) {
                            if (Number(item_tmp) <= 1) {
                                skip = false; return;
                            }
                            if (item.AnswerType != 2) {
                                if (list_answer[item.AnswerKey].Index == list_answer[Number(item_tmp)].Index)
                                    skip = true; return;
                            }
                        });
                    }
                    //------
                })
            }
        }

        /*
        if (list_question[id_q].Bind_Blocks != null) {
            if (list_blocks[id_q].fromQuestion == id_q && list_blocks[id_q].typeBlock == 1) {
                $.each(result[massiv_question_id.indexOf(list_question[id_q].Bind_Blocks)], function (i, item_tmp) {
                    if (Number(item_tmp) <= 1) {
                        skip = false; return;
                    }
                    if (item.AnswerType != 2) {
                        if (list_answer[item.AnswerKey].Index == list_answer[Number(item_tmp)].Index)
                            skip = true; return;
                    }
                });
            }
            if (list_blocks[id_q].fromQuestion == id_q && list_blocks[id_q].typeBlock == 2) {
                skip = true;
                $.each(result[massiv_question_id.indexOf(list_question[id_q].Bind_Blocks)], function (i, item_tmp) {
                    if (Number(item_tmp) <= 1) {
                        skip = false; return;
                    }
                    if (item.AnswerType != 2) {
                        if (list_answer[item.AnswerKey].Index == list_answer[Number(item_tmp)].Index) {
                            skip = false; return;
                        }
                    }
                    else {
                        skip = false;
                    }
                });
            }
        }*/
        return skip;
    }
    function Check_blocks_Row(item) {
        var skip = false;
        if (list_question[id_q].Bind_Blocks != null) {
            if (list_blocks[id_q].fromQuestion == id_q && list_blocks[id_q].typeBlock == 1) {
                $.each(result[massiv_question_id.indexOf(list_question[id_q].Bind_Blocks)], function (i, item_tmp) {
                    if (item.AnswerType != 2) {
                        if (item.IndexRow == list_answer[Number(item_tmp)].Index)
                            skip = true; return;
                    }
                });
            }
            if (list_blocks[id_q].fromQuestion == id_q && list_blocks[id_q].typeBlock == 2) {
                skip = true;
                $.each(result[massiv_question_id.indexOf(list_question[id_q].Bind_Blocks)], function (i, item_tmp) {
                    if (Number(item_tmp) <= 1) {
                        skip = false; return;
                    }
                    if (item.AnswerType != 2) {
                        if (item.IndexRow == list_answer[Number(item_tmp)].Index) {
                            skip = false; return;
                        }
                    }
                    else {
                        skip = false;
                    }
                });
            }
        }
        console.info(skip);
        return skip;
    }

    function checkedAnswer(tmp) {
        if (type_q == 2) {
            if (!tmp.children('td').children('input[name=group]').is(':checked')) {
                if (!tmp.children('td').children('input[name=group]').is(':disabled')) {
                    tmp.children('td').children('input[name=group]').prop('checked', true);
                    if (tmp.find('input.is_free_area').prop('checked')) {
                        if (tmp.find('textarea.text_free_area').length == 0)
                            tmp.children('td').append('<textarea class="text_free_area"  style="margin-left: 10px; width: 600px; height: 50px; resize: none; display: none"></textarea>');
                        tmp.find('textarea.text_free_area').slideDown(100);
                    }
                }
            }
            else {
                tmp.children('td').children('input[name=group]').prop('checked', false);
                tmp.find('textarea.text_free_area').slideUp(200);
            }
        } else if (type_q == 4) {
            tmp.find('input[name^=group]').prop('checked', true);
        } else {
            tmp.children('td').find('input[name=group]').prop('checked', true);
            if (tmp.find('input.is_free_area').prop('checked')) {
                if (tmp.find('textarea.text_free_area').length == 0) {
                    $('.answer_table').find('textarea.text_free_area').remove();
                    tmp.children('td').append('<textarea class="text_free_area"  style="margin-left: 10px; width: 600px; height: 50px; resize: none; display: none"></textarea>');
                }
                $('textarea.text_free_area').slideDown(100);
            } else {
                $('.answer_table').find('textarea.text_free_area').slideUp(200);
            }
        }
    }

    function checkedAnswerBase(tmp) {
        if (type_q == 2) {
            if (tmp.find('input[name=group]').is(':checked')) {
                $('.answer_table input[name=group]').prop('disabled', true).prop('checked', false);
                tmp.find('input[name=group]').prop('disabled', false).prop('checked', true);
                $('textarea.text_free_area').css('position', 'fixed').animate({ left: '+=100', opacity: 0 }, 1000);
            } else {
                $('.answer_table input[name=group]').prop('disabled', false);
                tmp.find('input[name=group]').prop('checked', false);
                $('textarea.text_free_area').css({
                    'position': 'relative',
                    'opacity': 1,
                    'left': 'auto'
                }).hide();
            }
        }
    }

    function find_transition_move(id_question, list_result) {
        for (var i = 0; i < list_transition.length; i++) {
            if (list_transition[i].fromQuestion == id_question) {
                for (var j = 0; j < list_result.length; j++) {
                    if (list_transition[i].TriggerAnswer == list_result[j]) return i;
                }
            }
        }
        return -1;
    }

    function find_transition_back(id_question) {
        for (var i = 0; i < list_transition.length; i++) {
            if (list_transition[i].toQuestion == id_question && list_transition[i].ActiveTransition == true) return i;
        }
        return -1;
    }

    function CheckLimitAnswer() {
        var limit_count = list_question[id_q].LimitCount;
        console.log("limit count ", $('.answer_panel').find('input[name=group]:checked').length);
        if (limit_count > 0 && limit_count != null) {
            if ($('.answer_panel').find('input[name=group]:checked').length == limit_count) {
                $('div.limit_checked_div').remove();
                $('.answer_panel').find('input[name=group]').each(function () {
                    if (!$(this).is(":checked")) {
                        $(this).prop('disabled', true);
                    }
                })
                $('div.wrong_choise').after('<div class="limit_checked_div wrong_choise">Выбрано максимальное количество ответов. Для выбора другого ответа отмените любой из уже выбранных.</div>');
                $('div.limit_checked_div').fadeIn(500);
            } else if ($('.answer_panel').find('input[name=group]:checked').length < limit_count) {
                $('.answer_panel').find('input[name=group]').each(function () {
                    if (!$(this).is(":checked")) {
                        $(this).prop('disabled', false);
                    }
                })
                $('div.limit_checked_div').remove();
            }
        }
    }
// END
</script>